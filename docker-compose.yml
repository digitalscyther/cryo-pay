services:
  api:
    build:
      context: api
      target: final
    restart: always
    env_file:
      - api/.env
    networks:
      - nginx_network
      - postgres_network
#      - redis_network

  web:
    build:
      context: web
      target: final
      args:
        - BASE_API_URL=/api
    restart: always
    environment:
      NODE_ENV: production
    networks:
      - nginx_network

  nginx:
    image: nginx
    restart: always
    volumes:
      - ./files/nginx/nginx:/etc/nginx/conf.d
    ports:
      - "8080:80"
    depends_on:
      - web
    networks:
      - nginx_network

  postgres:
    image: postgres
    restart: always
    command: postgres -c 'max_connections=2000'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_USER=cryo
      - POSTGRES_DB=cryo
    networks:
      - postgres_network

#  redis:
#    image: 'bitnami/redis:latest'
#    environment:
#      - REDIS_PASSWORD=redis123
#    volumes:
#      - redis_data:/bitnami/redis/data
#    networks:
#      - redis_network

networks:
  nginx_network:
    driver: bridge
  postgres_network:
    driver: bridge
#  redis_network:
#    driver: bridge

volumes:
    postgres_data:
#    redis_data:
